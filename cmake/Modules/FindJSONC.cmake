# - Find JSON-C
# This module finds an installed JSON-C package.
#
# It sets the following variables:
#  JSONC_FOUND       - Set to false, or undefined, if JSON-C isn't found.
#  JSONC_INCLUDE_DIR - The JSON-C include directory.
#  JSONC_LIBRARY     - The JSON-C library to link against.

FIND_PATH(JSONC_INCLUDE_DIR_FEDORA json-c/json.h)
FIND_LIBRARY(JSONC_LIBRARY_FEDORA NAMES json-c)

FIND_PATH(JSONC_INCLUDE_DIR json/json.h)
FIND_LIBRARY(JSONC_LIBRARY NAMES json)

IF (JSONC_INCLUDE_DIR AND JSONC_LIBRARY)
   SET(JSONC_FOUND TRUE)
ENDIF (JSONC_INCLUDE_DIR AND JSONC_LIBRARY)

IF (JSONC_INCLUDE_DIR_FEDORA AND JSONC_LIBRARY_FEDORA)
    SET(JSONC_FOUND_FEDORA TRUE)
   add_definitions(-DJSONC_FEDORA)
ENDIF (JSONC_INCLUDE_DIR_FEDORA AND JSONC_LIBRARY_FEDORA)

IF (JSONC_FOUND OR JSONC_FOUND_FEDORA)
    IF (JSONC_FOUND)
        # show which JSON-C was found only if not quiet
        IF (NOT JSONC_FIND_QUIETLY)
            MESSAGE(STATUS "Found JSON-C: ${JSONC_LIBRARY}")
        ENDIF (NOT JSONC_FIND_QUIETLY)

    ENDIF (JSONC_FOUND)
    
    IF (JSONC_FOUND_FEDORA)
        # show which JSON-C was found only if not quiet
        IF (NOT JSONC_FIND_QUIETLY)
            MESSAGE(STATUS "Found JSON-C: ${JSONC_LIBRARY_FEDORA}")
        ENDIF (NOT JSONC_FIND_QUIETLY)

    ENDIF (JSONC_FOUND_FEDORA)

ELSE (JSONC_FOUND OR JSONC_FOUND_FEDORA)

# fatal error if JSON-C is required but not found
IF (JSONC_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could not find JSON-C")
ENDIF (JSONC_FIND_REQUIRED)

ENDIF(JSONC_FOUND OR JSONC_FOUND_FEDORA)
